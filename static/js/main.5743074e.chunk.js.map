{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","ContactForm","state","name","number","reset","setState","changeHandler","e","target","value","submitHandler","contactAdding","props","preventDefault","className","styles","form","onSubmit","this","type","pattern","title","required","onChange","butt","Component","ContactList","deleteItem","id","deleteContact","list","contactList","map","item","button","onClick","Filter","getFilterValue","filter","htmlFor","input","App","contacts","some","alert","prevState","shortid","generate","handleFilter","renderFilter","lowerFilter","toLowerCase","includes","showFilteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5743074e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3Yk64\",\"button\":\"ContactList_button__1kJg4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2Nwcf\"};","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  static propTypes = {\n    contactAdding: PropTypes.func,\n  };\n\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n  changeHandler = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  submitHandler = (e) => {\n    const { name, number } = this.state;\n    const { contactAdding } = this.props;\n    e.preventDefault();\n    contactAdding(name, number);\n    this.reset();\n  };\n  render() {\n    return (\n      <div className={styles.form}>\n        <h3>Name</h3>\n        <form onSubmit={this.submitHandler}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.changeHandler}\n          />\n\n          <h3>Number</h3>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.changeHandler}\n          />\n          <br />\n          <button className={styles.butt} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\nexport default ContactForm;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\n\nexport class ContactList extends Component {\n  static propTypes = {\n    deleteContact: PropTypes.func,\n    contactList: PropTypes.array,\n  };\n\n  deleteItem = (id) => {\n    this.props.deleteContact(id);\n  };\n\n  render() {\n    return (\n      <div className={styles.list}>\n        {this.props.contactList.map((item) => (\n          <li key={item.id}>\n            <span>{item.name}</span>\n            <span>{item.number}</span>\n            <button\n              className={styles.button}\n              onClick={() => this.deleteItem(item.id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default ContactList;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\n\nexport class Filter extends Component {\n  static propTypes = {\n    filter: PropTypes.func,\n  };\n\n  getFilterValue = (e) => {\n    this.props.filter(e.target);\n  };\n\n  render() {\n    return (\n      <div className={styles.filter}>\n        <label htmlFor=\"filter\">Find contacts by name</label>\n        <br />\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"filter\"\n          id=\"filter\"\n          onChange={this.getFilterValue}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Filter;\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  contactAdding = (name, number) => {\n    const check = this.state.contacts.some((item) => item.name === name);\n    if (check) {\n      alert(`${name} is already in Contacts`);\n    } else {\n      this.setState((prevState) => ({\n        contacts: [\n          ...prevState.contacts,\n          { id: shortid.generate(), name, number },\n        ],\n      }));\n    }\n  };\n\n  handleFilter = ({ name, value }) => {\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  renderFilter = () => {\n    const { filter, contacts } = this.state;\n    const lowerFilter = filter.toLowerCase();\n    return contacts.filter((item) =>\n      item.name.toLowerCase().includes(lowerFilter)\n    );\n  };\n\n  deleteContact = (id) => {\n    this.setState({\n      contacts: this.state.contacts.filter((item) => item.id !== id),\n    });\n  };\n\n  render() {\n    const showFilteredContacts = this.renderFilter();\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm contactAdding={this.contactAdding} />\n        <h2>Contacts</h2>\n        <Filter filter={this.handleFilter} />\n        <ContactList\n          contactList={showFilteredContacts}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3divN\",\"butt\":\"ContactForm_butt__BJfzM\"};"],"sourceRoot":""}